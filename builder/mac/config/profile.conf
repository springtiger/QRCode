LANGUAGE = C++

CONFIG(debug, debug|release) {
    BUILD_MODE = "debug"
    DEFINES += _DEBUG
} else {
    BUILD_MODE = "release"
    DEFINES += NDEBUG
}

#c++ 11 support
CONFIG += c++11

#qt support
CONFIG += qt

DEFINES += _UNICODE

PROJECTDIR = $$_PRO_FILE_PWD_

TARGET = $$LIBNAME
BUILDDIR = $$PROJECTDIR/../../bin
DESTDIR = $$BUILDDIR/$$BUILD_MODE
OBJECTS_DIR = $$PROJECTDIR/../../tmp/$$BUILD_MODE/$$LIBNAME
MOC_DIR = $$OBJECTS_DIR/moc
UI_DIR = $$OBJECTS_DIR/uic
RCC_DIR = $$MOC_DIR

INCLUDEPATH += $$PROJECTDIR
INCLUDEPATH += $$PROJECTDIR/src/
INCLUDEPATH += $$PROJECTDIR/../
INCLUDEPATH += $$OBJECTS_DIR

LIBS  += -L$$DESTDIR

#include QT
LIBS += -L$$[QT_INSTALL_LIBS]
INCLUDEPATH += $$[QT_INSTALL_HEADERS]

win32 {
    BOOSTINCPATH = $$(BOOST_164)
    BOOSTLIBPATH = $$BOOSTINCPATH/lib
    UNAME = win32

    QMAKE_SUBSYSTEM_SUFFIX = ,5.01

    QMAKE_CXXFLAGS -= -Zc:strictStrings
	QMAKE_CFLAGS -= -Zc:strictStrings
#    QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO -= -Zc:strictStrings

    #QMAKE_LFLAGS_APP += /SUBSYSTEM:WINDOWS,5.01


    QMAKE_CXXFLAGS_STL_ON   = -EHa
    QMAKE_CXXFLAGS_EXCEPTIONS_ON = -EHa

    DEFINES += _WINDOWS WINDOWS
} else {
    macx{
        UNAME = mac
    } else {
        UNAME = linux
    }

    #no version name for output
    CONFIG += unversioned_libname unversioned_soname

    #no symbol link for output
    QMAKE_LN_SHLIB = :

    LIBS += -L/usr/local/lib
    INCLUDEPATH += /usr/local/include
    
    CONFIG(release, debug|release){
		QMAKE_CXXFLAGS += -w    
    }
}

#3rd parties
3rdDIR = $$PROJECTDIR/../../3rdParty

INCLUDEPATH += $$3rdDIR/boost_1_68_0
INCLUDEPATH += $$3rdDIR/CGAL/x64/include
INCLUDEPATH += $$3rdDIR

defined(3RD_LIBS,var){
    for(3rd_l,3RD_LIBS){
        INCLUDEPATH += $$3rdDIR/$$3rd_l/include
        win32 {
            exists($$3rdDIR/$$3rd_l/bin) {
                LIBS += -L$$3rdDIR/$$3rd_l/bin
            }
        }
        LIBS_DIR = $$3rdDIR/$$3rd_l/libs/$$UNAME
        exists($$LIBS_DIR/$$BUILD_MODE) {
           LIBS_DIR = $$LIBS_DIR/$$BUILD_MODE
        }
        LIBS += -L$$LIBS_DIR
        files = $$files($$LIBS_DIR//* )
        for(f,files){
            BASE_NAME = $$basename(f)
            BASE_NAME = $$section(BASE_NAME, . , 0, 0)
            !win32 {
               BASE_NAME = $$replace(BASE_NAME, "lib", "")
            }
            LIBS += -l$$BASE_NAME
        }
    }
}

#precompile
!contains(CONFIG,precompile_header){
    CONFIG += precompile_header
}

PRECOMPILED_HEADER = $$PROJECTDIR/src/stdafx.h
PRECOMPILED_DIR = $$OBJECTS_DIR
precompile_header:!isEmpty(PRECOMPILED_HEADER) {
    DEFINES += USING_PCH
}

lessThan(QT_MAJOR_VERSION, 5) {
    message("Cannot build PadSystem with Qt $${QT_VERSION}.")
    error("Use at least Qt 5.0")
}

